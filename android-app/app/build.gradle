plugins {
    id 'com.android.application' version '8.5.2'
    id 'org.mozilla.rust-android-gradle.rust-android' version '0.9.3'
}

android {
    namespace 'com.erik_tesar.car.remote'
    compileSdk 33
    ndkVersion '25.2.9519653'

    defaultConfig {
        applicationId "com.erik_tesar.car.remote"
        minSdk 33
        targetSdk 33
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug

            shrinkResources true
            minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    //implementation 'io.github.gedgygedgy.rust:jni-utils:0.1.0'
    // already included in droidplug build
    //implementation fileTree(dir: '../target/debug/java/libs', include: ['*.aar', '*.jar'], exclude: [])
    implementation files('../btleplug/src/droidplug/java/build/outputs/aar/droidplug-release.aar')

}

cargo {
    module  = '..'
    libname = 'car_remote'
    pythonCommand = "python3"
    profile = "debug"
    //profile = gradle.startParameter.taskNames.any{it.toLowerCase().contains("debug")} ? "debug" : "release"
    targets = ['arm64'] // 'arm', 'arm64', 'x86', 'x86_64'
}

preBuild.dependsOn 'cargoBuild'